<?php

/**
 * @file
 * This file provides basic hooks imlementations.
 */

/**
 * kva
 * Implements hook_menu().
 * 
 * @return array
 */
function edu_sample_menu() {
  return array(

    'address-book/add' => array(
      'title' => 'Fill form',
      'page callback' => 'edu_sample_form_page',
//      'page arguments' => array('edu_sample_form'),
      'access callback' => 'user_access',
      'access arguments' => array('visit edu sample page'),
    ),

    'address-book' => array(
      'title' => 'Address book',
      'page callback' => 'edu_sample_page_address_book',//drupal_get_form
//      'page arguments' => array('edu_sample_form'),
      'access callback' => 'user_access',
      'access arguments' => array('visit edu sample page'),
    ),

      'address-book/edit' => array(
          'title' => 'Edit form',
          'page callback' => 'edu_sample_edit_form_page',
//      'page arguments' => array('edu_sample_form'),
          'access callback' => 'user_access',
          'access arguments' => array('visit edu sample page'),
      ),
  );
}


/**
 * Page callback for "edu-sample-form".
 * 
 * @return array|mixed
 */
function edu_sample_form_page() {
  return drupal_get_form('edu_sample_form');
}


/**
 * Page callback for "edu_sample_edit_form".
 *
 * @return array|mixed
 */
function edu_sample_edit_form_page() {
    return drupal_get_form('edu_sample_edit_form');
}

/**
 * Page callback for "edu_sample_form_address_book".
 *
 * @return array|mixed
 */
function edu_sample_page_address_book() {
    return drupal_get_form('edu_sample_form_address_book');
}

function edu_sample_form_address_book($form, &$form_state) {
    $form = array();

    $header = array(
        'full_name'=> t('Full name'),
        //'first_name' => t('First name'),
        //'last_name' => t('last_name'),
        'category' => t('category'),
        'email' => t('email'),
        'phone' => t('phone'),
        'birthday' => t('birthday'),
        t('Actions links'),
    );

    $rows = array();
    //filling DB with values
    global $user;

    $result = db_select('edu_sample2', 'edu');//table_name, alias
    $result->fields('edu', array('contact_id', 'first_name', 'last_name', 'email', 'phone', 'birthday', 'category', 'notes', 'fid'));
    //$result->condition('uid', $user->uid, '=');
    $result->range(0, 50);
    $result_rows = $result->execute()->fetchAll();

    foreach ($result_rows as $row) {
        $rows[$row->contact_id] = array(
            'full_name'=>$row->first_name. " " .$row->last_name,
            //'first_name' => $row->first_name,
            //'last_name' => $row->last_name,
            'category' => $row->category,
            'email' => $row->email,
            'phone' => $row->phone,
            'birthday' => $row->birthday,
            l(t('Edit'), "address-book/Edit").' '.
            l(t('Delete'), "address-book/delete"),
            //l(t('Edit'), "address-book/{$row->contact_id}/Edit").' '.
            //l(t('Delete'), "address-book/{$row->contact_id}/delete"),
        );

    }

    $form['Create_contact'] = array(
        '#type' => 'link',
        '#title' => t('Create new contact'),
        '#href' => 'address-book/add'// . $node->nid,
    );

    $form['values'] = array(
        '#type' => 'tableselect',
        '#header' => $header,
        '#options' => $rows,
        '#js_select' => FALSE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Delete selected'),
    );

    return $form;
}

/**
 * Form callback for "edu-sample-form".
 * 
 * @param $form
 * @param $form_state
 * @return array
 */
function edu_sample_form($form, &$form_state) {
    $form = array();

    $form['file'] = array(
        '#type' => 'file',
        '#title' => 'Картинка',
        '#description' => 'Выберите файл с расширением jpg, jpeg, png или gif',
    );

  $form['first_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),

  );

  $form['last_name_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Surname field'),
  );



  $form['email_field'] = array(
      '#type' => 'textfield',
      '#title' => t('Email'),
  );

    $form['phone_field'] = array(
        '#type' => 'textfield',
        '#title' => t('Phone'),
    );

    $form['birthday_field'] = array(
        '#type' => 'textfield',//change
        '#title' => t('Birthday'),
    );
/*
эта форма для нормльного ввода даты рождения, но она не работает из-за отсутствия модуля DATE,
а его я не могу установить из-за какой-то ошибки с FTP
    $form['birthdate_field'] = array(
        '#type' => 'date_select',
        '#title' => t('Birth date'),
        '#default_value'=>'',
        '#date_format' => 'd m Y ',
        '#date_year_range' => '-100:+0',
        '#date_increment' => '15',
    );
*/
    $form['category_field'] = array(
        '#type' => 'select',//change
        '#title' => t('Category'),
        '#options' => array('основные', 'работа', 'друзья'),
    );

    $form['notes_field'] = array(
        '#type' => 'textarea',//change
        '#title' => t('Notes'),
    );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
  );
  
  return $form;
}

function edu_sample_edit_form($form, &$form_state) {
    $form = array();

    $def = array();
    $result = db_select('edu_sample2', 'edu');
    $result->fields('edu', array('contact_id', 'first_name', 'last_name', 'email', 'phone', 'birthday', 'category', 'notes', 'fid'));
    $result->range(0, 50);
    $result_rows = $result->execute()->fetchAll();
    foreach ($result_rows as $row) {
        $def[$row->contact_id] = array(
            'full_name'=>$row->first_name. " " .$row->last_name,
            //'first_name' => $row->first_name,
            //'last_name' => $row->last_name,
            'category' => $row->category,
            'email' => $row->email,
            'phone' => $row->phone,
            'birthday' => $row->birthday,
        );
    /*
    foreach ($result_rows as $row) {
        $def[] = array(
            $row->contact_id,
            $row->value,
            $row->first_name,
            $row->last_name,
            $row->email,
            $row->phone,
            $row->birthday,
            $row->category,
            $row->notes,
            $row->fid
        );*/
    }
    dsm($def['category']);
    $form['file'] = array(
        '#type' => 'file',
        '#title' => 'Картинка',
        '#description' => 'Выберите файл с расширением jpg, jpeg, png или gif',
    );

    $form['first_textfield'] = array(
        '#type' => 'textfield',
        '#title' => t('Name'),
        '#default_value' => $def[$row]['category']

    );

    $form['last_name_field'] = array(
        '#type' => 'textfield',
        '#title' => t('Surname field'),
    );



    $form['email_field'] = array(
        '#type' => 'textfield',
        '#title' => t('Email'),
    );

    $form['phone_field'] = array(
        '#type' => 'textfield',
        '#title' => t('Phone'),
    );

    $form['birthday_field'] = array(
        '#type' => 'textfield',//change
        '#title' => t('Birthday'),
    );
    /*
    эта форма для нормльного ввода даты рождения, но она не работает из-за отсутствия модуля DATE,
    а его я не могу установить из-за какой-то ошибки с FTP
        $form['birthdate_field'] = array(
            '#type' => 'date_select',
            '#title' => t('Birth date'),
            '#default_value'=>'',
            '#date_format' => 'd m Y ',
            '#date_year_range' => '-100:+0',
            '#date_increment' => '15',
        );
    */
    $form['category_field'] = array(
        '#type' => 'select',//change
        '#title' => t('Category'),
        '#options' => array('основные', 'работа', 'друзья'),
    );

    $form['notes_field'] = array(
        '#type' => 'textarea',//change
        '#title' => t('Notes'),
    );


    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Send'),
    );

    return $form;
}

/**
 * Validate callback.
 * 
 * @param $form
 * @param $form_state
 */
  function edu_sample_form_validate(&$form, &$form_state) {
  $validators = array(
    'file_validate_is_image' => array(), // Проверка, действительно ли файл является изображением
    'file_validate_extensions' => array('png gif jpg jpeg'), // Проверка на расширения
    'file_validate_size' => array(1 * 1024 * 1024), // Проверка на размер файла (максимум 1mb)
  );
  // Загружаем файл в sites/default/files (по умолчанию)
  if ($file = file_save_upload('file', $validators, 'public://')) {
    $form_state['values']['file'] = $file; // передаём информацию о файле в ф-ю mymodule_form_submit()
  }
  else {
    form_set_error('file', 'Файл не был загружен');
  }
}

function edu_sample_edit_form_validate(&$form, &$form_state) {
    $validators = array(
        'file_validate_is_image' => array(), // Проверка, действительно ли файл является изображением
        'file_validate_extensions' => array('png gif jpg jpeg'), // Проверка на расширения
        'file_validate_size' => array(1 * 1024 * 1024), // Проверка на размер файла (максимум 1mb)
    );
    // Загружаем файл в sites/default/files (по умолчанию)
    if ($file = file_save_upload('file', $validators, 'public://')) {
        $form_state['values']['file'] = $file; // передаём информацию о файле в ф-ю mymodule_form_submit()
    }
    else {
        form_set_error('file', 'Файл не был загружен');
    }
}

/**
 *Submit form  to fill address book.
 * 
 * @param $form
 * @param $form_state
 */
function edu_sample_form_submit(&$form, &$form_state) {

    $file = $form_state['values']['file'];
    $file->status = FILE_STATUS_PERMANENT; // Изменяем статус файла на "Постоянный"
    file_save($file); // Сохраняем новый статус
    drupal_set_message('Картинка загружена');

    global $user;

  // Insert new row in module table "edu_sample".
  db_insert('edu_sample2')
    ->fields(array(
        'first_name' => $form_state['values']['first_textfield'],
        'last_name' => $form_state['values']['last_name_field'],
          'email' => $form_state['values']['email_field'],
          'phone' => $form_state['values']['phone_field'],
          'birthday' => $form_state['values']['birthday_field'],
          'category' => $form_state['values']['category_field'],
          'notes' => $form_state['values']['notes_field'],
          'fid' =>$file->fid,// $file объект класса, fid - поле объекта
          'uid'=>$user->uid//добавил со временем, не забыть переустановить БД
      ))
    ->execute();
}

/**
 * Submit form to edit address book.
 *
 * @param $form
 * @param $form_state
 */
function edu_sample_edit_form_submit(&$form, &$form_state) {

    $file = $form_state['values']['file'];
    $file->status = FILE_STATUS_PERMANENT; // Изменяем статус файла на "Постоянный"
    file_save($file); // Сохраняем новый статус
    drupal_set_message('Картинка загружена');

    global $user;

    // Insert new row in module table "edu_sample".
    db_insert('edu_sample2')
        ->fields(array(
            'first_name' => $form_state['values']['first_textfield'],
            'last_name' => $form_state['values']['last_name_field'],
            'email' => $form_state['values']['email_field'],
            'phone' => $form_state['values']['phone_field'],
            'birthday' => $form_state['values']['birthday_field'],
            'category' => $form_state['values']['category_field'],
            'notes' => $form_state['values']['notes_field'],
            'fid' =>$file->fid,// $file объект класса, fid - поле объекта
            'uid'=>$user->uid//добавил со временем, не забыть переустановить БД
        ))
        ->execute();
}




function edu_sample_form_address_book_submit(&$form, &$form_state) {

    //$A=COUNT($form_state['values']['values']);

    dsm($form_state);
    for($i=1;$i<=12;$i++)
    {
        if(!$form_state['values']['values'][$i])
        $f=$form_state['values']['values'][$i];
        //drupal_set_message($f);
            db_query("DELETE FROM edu_sample2 WHERE Contact_id = :cid", array(':cid'=>$f));
    }

    //dsm($form_state );

}








